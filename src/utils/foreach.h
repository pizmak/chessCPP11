#pragma once

// can be use as separator (without parentheses)
#define COMMA() ,
#define NO_SEPARATOR()

// helper macros that takes __VA_ARGS__ and return number of arguments
// fake argument is needed if __VA_ARGS__ length is 0, in which case expansion gives "(," which is compiler error
#define COUNT_HELPER(fake, _30, _29, _28, _27, _26, _25, _24, _23, _22, _21, _20, _19, _18, _17, _16, _15, _14, _13, _12, _11, _10, _9, _8, _7, _6, _5, _4, _3, _2, _1, _0, ...) _0
#define COUNT(...) COUNT_HELPER(fake, ##__VA_ARGS__, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)

// standard concat trick, two level expansion
#define CONCAT_HELPER(x, y) x ## y
#define CONCAT(x, y) CONCAT_HELPER(x, y)

#define ADD_COUNT(name, ...) CONCAT(name, COUNT(__VA_ARGS__))

// FOREACH_XXX family of macros can be used for compile time looping
// notice: separator is function style macro to suppress evaluating it till end of expansion,
// it gives possibility to use ,(comma) as separator
#define FOREACH_HELPER0( macroName, separator) CONCAT(macroName, 0)
#define FOREACH_HELPER1( macroName, separator, arg) macroName(arg)
#define FOREACH_HELPER2( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER1( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER3( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER2( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER4( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER3( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER5( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER4( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER6( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER5( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER7( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER6( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER8( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER7( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER9( macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER8( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER10(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER9( macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER11(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER10(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER12(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER11(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER13(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER12(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER14(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER13(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER15(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER14(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER16(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER15(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER17(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER16(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER18(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER17(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER19(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER18(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER20(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER19(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER21(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER20(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER22(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER21(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER23(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER22(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER24(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER23(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER25(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER24(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER26(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER25(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER27(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER26(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER28(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER27(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER29(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER28(macroName, separator, __VA_ARGS__)
#define FOREACH_HELPER30(macroName, separator, arg, ...) macroName(arg) separator() FOREACH_HELPER29(macroName, separator, __VA_ARGS__)

#define FOREACH(macroName, separator, ...) ADD_COUNT(FOREACH_HELPER, ##__VA_ARGS__)(macroName, separator, ##__VA_ARGS__)

#define FOREACH_ARG_HELPER0( macroName, arg, separator) CONCAT(macroName, 0)
#define FOREACH_ARG_HELPER1( macroName, arg, separator, arg1) macroName(arg, arg1)
#define FOREACH_ARG_HELPER2( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER1( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER3( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER2( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER4( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER3( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER5( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER4( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER6( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER5( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER7( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER6( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER8( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER7( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER9( macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER8( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER10(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER9( macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER11(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER10(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER12(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER11(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER13(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER12(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER14(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER13(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER15(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER14(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER16(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER15(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER17(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER16(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER18(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER17(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER19(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER18(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER20(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER19(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER21(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER20(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER22(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER21(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER23(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER22(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER24(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER23(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER25(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER24(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER26(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER25(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER27(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER26(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER28(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER27(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER29(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER28(macroName, arg, separator, __VA_ARGS__)
#define FOREACH_ARG_HELPER30(macroName, arg, separator, arg1, ...) macroName(arg, arg1) separator() FOREACH_ARG_HELPER29(macroName, arg, separator, __VA_ARGS__)

#define FOREACH_ARG(macroName, arg, separator, ...) ADD_COUNT(FOREACH_ARG_HELPER, ##__VA_ARGS__)(macroName, arg, separator, ##__VA_ARGS__)

#define FOREACH2_HELPER0( macroName, separator) CONCAT(macroName, 0)
#define FOREACH2_HELPER1( macroName, separator, arg) NUMBER_OF_ARGS_HAS_TO_BE_EVEN
#define FOREACH2_HELPER2( macroName, separator, arg1, arg2) macroName(arg1, arg2)
#define FOREACH2_HELPER3( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER1( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER4( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER2( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER5( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER3( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER6( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER4( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER7( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER5( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER8( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER6( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER9( macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER7( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER10(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER8( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER11(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER9( macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER12(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER10(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER13(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER11(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER14(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER12(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER15(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER13(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER16(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER14(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER17(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER15(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER18(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER16(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER19(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER17(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER20(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER18(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER21(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER19(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER22(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER20(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER23(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER21(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER24(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER22(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER25(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER23(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER26(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER24(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER27(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER25(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER28(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER26(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER29(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER27(macroName, separator, __VA_ARGS__)
#define FOREACH2_HELPER30(macroName, separator, arg1, arg2, ...) macroName(arg1, arg2) separator() FOREACH2_HELPER28(macroName, separator, __VA_ARGS__)

#define FOREACH2(macroName, separator, ...) ADD_COUNT(FOREACH2_HELPER, ##__VA_ARGS__)(macroName, separator, ##__VA_ARGS__)

#define FOREACH2_ARG_HELPER0( macroName, arg, separator) CONCAT(macroName, 0)
#define FOREACH2_ARG_HELPER1( macroName, arg, separator, arg1) NUMBER_OF_ARGS_HAS_TO_BE_EVEN
#define FOREACH2_ARG_HELPER2( macroName, arg, separator, arg1, arg2)      macroName(arg, arg1, arg2)
#define FOREACH2_ARG_HELPER3( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER1( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER4( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER2( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER5( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER3( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER6( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER4( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER7( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER5( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER8( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER6( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER9( macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER7( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER10(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER8( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER11(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER9( macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER12(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER10(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER13(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER11(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER14(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER12(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER15(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER13(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER16(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER14(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER17(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER15(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER18(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER16(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER19(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER17(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER20(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER18(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER21(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER19(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER22(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER20(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER23(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER21(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER24(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER22(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER25(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER23(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER26(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER24(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER27(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER25(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER28(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER26(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER29(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER27(macroName, arg, separator, __VA_ARGS__)
#define FOREACH2_ARG_HELPER30(macroName, arg, separator, arg1, arg2, ...) macroName(arg, arg1, arg2) separator() FOREACH2_ARG_HELPER28(macroName, arg, separator, __VA_ARGS__)

#define FOREACH2_ARG(macroName, arg, separator, ...) ADD_COUNT(FOREACH2_ARG_HELPER, ##__VA_ARGS__)(macroName, arg, separator, ##__VA_ARGS__)
